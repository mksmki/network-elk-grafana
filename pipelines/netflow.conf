# Sample data
# https://ss3.scayle.es/netflow-data/netflow_sampling_1000_001_test_new.csv
#
#
# Logstash pipeline debugging
# https://stackoverflow.com/questions/40048005/how-can-i-debug-logstash-even-when-configuration-is-ok-on-windows
# stdout { codec => json }
#
# stdout {
#   codec => rubydebug {
#     metadata => true
#   }
# }

input {
  file {
    path => "/usr/share/logstash/samples/*.csv"
    mode => "read"
    type => "netflow"
  }
}

filter {

  grok {
    match => [ "message", "%{NUMBER:unix_secs},%{NUMBER:unix_nsecs},%{NUMBER:sysuptime},%{IP:observer.ip},%{NUMBER:network.packets},%{NUMBER:source.bytes},%{NUMBER:first},%{NUMBER:last},%{NUMBER:engine_type},%{NUMBER:engine_id},%{IP:source.ip},%{IP:destination.ip},%{IP:nexthop},%{NUMBER:input},%{NUMBER:output},%{NUMBER:source.port},%{NUMBER:destination.port},%{NUMBER:prot},%{NUMBER:tos},%{NUMBER:tcp_flags},%{NUMBER:src_mask},%{NUMBER:dst_mask},%{NUMBER:src_as},%{NUMBER:dst_as},%{NUMBER:Label}" ]
  }

  mutate {
    convert => { "[sysuptime]" => "integer" }
    convert => { "[network.packets]" => "integer" }
    convert => { "[source.bytes]" => "integer" }
    convert => { "[first]" => "integer" }
    convert => { "[last]" => "integer" }
    convert => { "[engine_type]" => "integer" }
    convert => { "[engine_id]" => "integer" }
    convert => { "[input]" => "integer" }
    convert => { "[output]" => "integer" }
    convert => { "[source.port]" => "integer" }
    convert => { "[destination.port]" => "integer" }
    convert => { "[prot]" => "integer" }
    convert => { "[tos]" => "integer" }
    convert => { "[tcp_flags]" => "integer" }
    convert => { "[src_mask]" => "integer" }
    convert => { "[dst_mask]" => "integer" }
    convert => { "[src_as]" => "integer" }
    convert => { "[dst_as]" => "integer" }
    convert => { "[Label]" => "integer" }
    add_field => ["timestamp_unix","%{unix_secs}.%{unix_nsecs}"]
  }

  date {
      match => [ "timestamp_unix", "UNIX" ]
  }

  mutate {
    add_field => { "[data_stream][type]" => "logs" }
    add_field => { "[data_stream][dataset]" => "netflow.log" }
    add_field => { "[data_stream][namespace]" => "network" }
  }

}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "netflow-%{+YYYY.MM.dd}"
    user => '${elastic_user}'
    password => '${elastic_password}'
  }

}
